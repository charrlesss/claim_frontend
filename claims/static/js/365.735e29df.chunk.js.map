{"version":3,"file":"static/js/365.735e29df.chunk.js","mappings":"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","sources":["Component/PageHelmet.tsx","Component/Report/ClaimsReport.tsx","Lib/validateDate.ts","Component/UpwardFields.tsx"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    const department = process.env.REACT_APP_DEPARTMENT\r\n    return (\r\n        <Helmet>\r\n            <title>{`${department} - ${title}`}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import { Button } from \"@mui/material\";\r\n\r\nimport { useContext, useEffect, useId, useRef, useState } from \"react\";\r\nimport { format, lastDayOfMonth, lastDayOfYear, addYears } from \"date-fns\";\r\nimport { useMutation } from \"@tanstack/react-query\";\r\nimport { UserContext } from \"../../App\";\r\nimport { Loading } from \"../Loading\";\r\nimport { SelectInput, TextAreaInput, TextInput } from \"../UpwardFields\";\r\nimport PageHelmet from \"../PageHelmet\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"../../Style/datepicker.css\";\r\nimport { wait } from \"../../Lib/wait\";\r\n\r\nconst buttons = [\r\n  { label: \"Approved Settled\", id: 0 },\r\n  { label: \"List of Ongoing Claims\", id: 1 },\r\n  { label: \"Denied Claims\", id: 2 },\r\n  { label: \"Cancel Claim\", id: 3 },\r\n  { label: \"Reimbursement\", id: 4 },\r\n  // { label: \"Denied Due To Balance \", id: 4 },\r\n  // { label: \"CNC\", id: 5 },\r\n  // { label: \"For Recovery\", id: 6 },\r\n  // { label: \"Claims Reported To ALPHA\", id: 7 },\r\n];\r\n\r\nexport default function ClaimsReport() {\r\n  const [buttonSelected, setButtonSelected] = useState(0);\r\n\r\n  return (\r\n    <>\r\n      <PageHelmet title={buttons[buttonSelected].label} />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          flex: 1,\r\n          height: \"100vh\",\r\n          backgroundColor: \"#F1F1F1\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            border: \"1px solid #94a3b8\",\r\n            width: \"700px\",\r\n            height: \"480px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            rowGap: \"10px\",\r\n            padding: \"20px\",\r\n            boxShadow: \"0px 0px 5px -1px rgba(0,0,0,0.75)\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              flex: 1,\r\n              display: \"flex\",\r\n              columnGap: \"10px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: \"250px\",\r\n                background: \"white\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                rowGap: \"2px\",\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <span\r\n                style={{\r\n                  width: \"100%\",\r\n                  textAlign: \"center\",\r\n                  fontSize: \"12px\",\r\n                  padding: \"5px\",\r\n                }}\r\n              >\r\n                *** CLAIMS ****\r\n              </span>\r\n              <div\r\n                style={{\r\n                  position: \"relative\",\r\n                  width: \"100%\",\r\n                  height: \"380px\",\r\n                  overflow: \"auto\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    position: \"absolute\",\r\n                  }}\r\n                >\r\n                  {buttons.map((itm, idx) => {\r\n                    return (\r\n                      <>\r\n                        <button\r\n                          key={idx}\r\n                          style={{\r\n                            fontSize: \"12px\",\r\n                            border: \"none\",\r\n                            background:\r\n                              buttonSelected === itm.id\r\n                                ? \"#0076d7\"\r\n                                : \"transparent\",\r\n                            color:\r\n                              buttonSelected === itm.id ? \"white\" : \"black\",\r\n                            width: \"100%\",\r\n                            textAlign: \"left\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          onClick={() => {\r\n                            setButtonSelected(itm.id);\r\n                          }}\r\n                        >\r\n                          {itm.label}\r\n                        </button>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {buttonSelected === 0 && (\r\n              <ClaimStatus\r\n                titleHeader={`CLAIM REPORT FOR APPROVED/SETTLED`}\r\n                linkPdf={`/report/approved-settled-pdf`}\r\n                linkExcel={`/report/approved-settled-excel`}\r\n                hideReport={false}\r\n              />\r\n            )}\r\n            {buttonSelected === 1 && (\r\n              <ClaimStatus\r\n                titleHeader={`ONGOING CLAIM REPORT`}\r\n                linkPdf={`/report/ongoing-pdf`}\r\n                linkExcel={`/report/ongoing-excel`}\r\n                hideReport={true}\r\n              />\r\n            )}\r\n            {buttonSelected === 2 && (\r\n              <ClaimStatus\r\n                titleHeader={`DENIED CLAIM REPORT`}\r\n                linkPdf={`/report/denied-pdf`}\r\n                linkExcel={`/report/denied-excel`}\r\n                hideReport={true}\r\n              />\r\n            )}\r\n            {buttonSelected === 3 && (\r\n              <ClaimStatus\r\n                titleHeader={`CANCEL CLAIM REPORT`}\r\n                linkPdf={`/report/cancel-pdf`}\r\n                linkExcel={`/report/cancel-excel`}\r\n                hideReport={true}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst ClaimStatus = ({ titleHeader, linkPdf, linkExcel, hideReport }: any) => {\r\n  const { user, myAxios } = useContext(UserContext);\r\n  const [title, setTitle] = useState(\r\n    generateTitle({\r\n      dateFrom: new Date(),\r\n      dateTo: lastDayOfMonth(new Date()),\r\n    })\r\n  );\r\n\r\n  const [report, setReport] = useState(\"Yearly\");\r\n  const titleRef = useRef<HTMLTextAreaElement>(null);\r\n  const reportRef = useRef<HTMLSelectElement>(null);\r\n  const departmentRef = useRef<HTMLSelectElement>(null);\r\n  const claimTypeRef = useRef<HTMLSelectElement>(null);\r\n  const statusRef = useRef<HTMLSelectElement>(null);\r\n  const _insuranceRef = useRef<any>(null);\r\n  const insuranceRef = useRef<HTMLSelectElement>(null);\r\n\r\n  const monthRef = useRef<HTMLInputElement>(null);\r\n\r\n  const yearRef = useRef<any>(null);\r\n  const dateCountRef = useRef<HTMLInputElement>(null);\r\n\r\n  const dateFromRef = useRef<HTMLInputElement>(null);\r\n  const dateToRef = useRef<HTMLInputElement>(null);\r\n\r\n  const { isPending: isLoadingAccount, mutate: mutateAccount } = useMutation({\r\n    mutationKey: [\"account\"],\r\n    mutationFn: async (variables: any) =>\r\n      await myAxios.post(`/report/get-insurance-provider`, variables, {\r\n        headers: {\r\n          Authorization: `Bearer ${user?.accessToken}`,\r\n        },\r\n      }),\r\n    onSuccess: (res, variable) => {\r\n      const response = res as any;\r\n      _insuranceRef.current.setDataSource(response.data.data);\r\n    },\r\n  });\r\n\r\n  const { isPending: isLoadingReportPDF, mutate: mutateReportPDF } =\r\n    useMutation({\r\n      mutationKey: [\"pdf-api\"],\r\n      mutationFn: async (variables: any) =>\r\n        await myAxios.post(linkPdf, variables, {\r\n          responseType: \"arraybuffer\",\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }),\r\n      onSuccess: (response, variable) => {\r\n        const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\r\n        const pdfUrl = URL.createObjectURL(pdfBlob);\r\n        window.open(\r\n          `/${\r\n            process.env.REACT_APP_DEPARTMENT\r\n          }/dashboard/report?pdf=${encodeURIComponent(pdfUrl)}`,\r\n          \"_blank\"\r\n        );\r\n      },\r\n    });\r\n  const { isPending: isLoadingReportExcel, mutate: mutateReportExcel } =\r\n    useMutation({\r\n      mutationKey: [\"excel-api\"],\r\n      mutationFn: async (variables: any) =>\r\n        await myAxios.post(linkExcel, variables, {\r\n          responseType: \"arraybuffer\",\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }),\r\n      onSuccess: (response, variable) => {\r\n        const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\r\n        const link = document.createElement(\"a\");\r\n        link.href = URL.createObjectURL(pdfBlob);\r\n        link.download = \"report.xls\"; // Set the desired file name\r\n        link.click(); // Simulate a click to start the download\r\n      },\r\n    });\r\n  const mutateAccountRef = useRef(mutateAccount);\r\n  useEffect(() => {\r\n    mutateAccountRef.current({});\r\n  }, []);\r\n\r\n  function generateTitle({ dateFrom, dateTo }: any) {\r\n    if (hideReport) {\r\n      return titleHeader;\r\n    }\r\n    return `${titleHeader}\\nFrom ${format(\r\n      new Date(dateFrom),\r\n      \"MM/01/yyyy\"\r\n    )} To ${format(new Date(dateTo), \"MM/dd/yyyy\")}\r\n    `;\r\n  }\r\n\r\n  function generateReportPdf() {\r\n    let dateFrom = new Date();\r\n    let dateTo = new Date();\r\n\r\n    if (!hideReport) {\r\n      if (report === \"Monthly\") {\r\n        dateFrom = new Date(`${monthRef.current?.value}-01`);\r\n        dateTo = lastDayOfMonth(new Date(dateFrom));\r\n      } else if (report === \"Yearly\") {\r\n        dateFrom = new Date(`${yearRef.current.input.value}-01-01`);\r\n        const count = parseInt(dateCountRef.current?.value as string);\r\n        if (count < 0) {\r\n          return alert(\"Invalid Year Count!\");\r\n        }\r\n        dateTo = lastDayOfYear(new Date(addYears(dateFrom, count)));\r\n      } else {\r\n        dateFrom = new Date(dateFromRef.current?.value as any);\r\n        dateTo = new Date(dateToRef.current?.value as any);\r\n      }\r\n    }\r\n\r\n    mutateReportPDF({\r\n      title: titleRef.current?.value,\r\n      department: departmentRef.current?.value,\r\n      claimType: claimTypeRef.current?.value,\r\n      status: statusRef.current?.value,\r\n      insurance: insuranceRef.current?.value,\r\n      dateFrom,\r\n      dateTo,\r\n    });\r\n  }\r\n  function generateReportExcel() {\r\n    let dateFrom = new Date();\r\n    let dateTo = new Date();\r\n\r\n    if (!hideReport) {\r\n      if (report === \"Monthly\") {\r\n        dateFrom = new Date(`${monthRef.current?.value}-01`);\r\n        dateTo = lastDayOfMonth(new Date(dateFrom));\r\n      } else if (report === \"Yearly\") {\r\n        dateFrom = new Date(`${yearRef.current.input.value}-01-01`);\r\n        const count = parseInt(dateCountRef.current?.value as string);\r\n        if (count < 0) {\r\n          return alert(\"Invalid Year Count!\");\r\n        }\r\n        dateTo = lastDayOfYear(new Date(addYears(dateFrom, count)));\r\n      } else {\r\n        dateFrom = new Date(dateFromRef.current?.value as any);\r\n        dateTo = new Date(dateToRef.current?.value as any);\r\n      }\r\n    }\r\n\r\n    mutateReportExcel({\r\n      title: titleRef.current?.value,\r\n      department: departmentRef.current?.value,\r\n      claimType: claimTypeRef.current?.value,\r\n      status: statusRef.current?.value,\r\n      insurance: insuranceRef.current?.value,\r\n      dateFrom,\r\n      dateTo,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {(isLoadingReportPDF || isLoadingReportExcel || isLoadingAccount) && (\r\n        <Loading />\r\n      )}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"column\",\r\n          padding: \"5px\",\r\n          rowGap: \"7px\",\r\n        }}\r\n      >\r\n        <TextAreaInput\r\n          containerStyle={{\r\n            marginBottom: \"10px\",\r\n          }}\r\n          label={{\r\n            title: \"Title : \",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"100px\",\r\n              display: \"none\",\r\n            },\r\n          }}\r\n          textarea={{\r\n            rows: 7,\r\n            style: { flex: 1 },\r\n            value: title,\r\n            onChange: (e) => {\r\n              setTitle(e.currentTarget.value);\r\n            },\r\n          }}\r\n          _inputRef={titleRef}\r\n        />\r\n        {!hideReport && (\r\n          <SelectInput\r\n            label={{\r\n              title: \"Report : \",\r\n              style: {\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n                width: \"100px\",\r\n              },\r\n            }}\r\n            selectRef={reportRef}\r\n            select={{\r\n              style: { flex: 1, height: \"22px\" },\r\n              defaultValue: \"Yearly\",\r\n              onKeyDown: (e) => {\r\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                  e.preventDefault();\r\n                  // refInvoice.current?.focus();\r\n                }\r\n              },\r\n              onChange: (e) => {\r\n                setReport(e.currentTarget.value);\r\n              },\r\n            }}\r\n            datasource={[\r\n              { key: \"Monthly\" },\r\n              { key: \"Yearly\" },\r\n              { key: \"Custom\" },\r\n            ]}\r\n            values={\"key\"}\r\n            display={\"key\"}\r\n          />\r\n        )}\r\n        {report === \"Monthly\" && !hideReport && (\r\n          <TextInput\r\n            label={{\r\n              title: \"Date :\",\r\n              style: {\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n                width: \"100px\",\r\n              },\r\n            }}\r\n            input={{\r\n              type: \"month\",\r\n              style: {\r\n                flex: 1,\r\n                height: \"22px !important\",\r\n              },\r\n              defaultValue: format(new Date(), \"yyyy-MM\"),\r\n              onKeyDown: (e) => {\r\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                  e.preventDefault();\r\n\r\n                  // searchCollectionCreditOpenModal(e.currentTarget.value);\r\n                }\r\n              },\r\n              onBlur: (e) => {\r\n                let dateFrom = new Date(`${e.currentTarget.value}-01`);\r\n                let dateTo = lastDayOfMonth(new Date(dateFrom));\r\n                setTitle(\r\n                  generateTitle({\r\n                    dateFrom,\r\n                    dateTo,\r\n                  })\r\n                );\r\n              },\r\n            }}\r\n            inputRef={monthRef}\r\n          />\r\n        )}\r\n        {report === \"Yearly\" && !hideReport && (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              columnGap: \"5px\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <MyDatePicker\r\n              label={{\r\n                title: \"Date : \",\r\n                style: {\r\n                  fontSize: \"12px\",\r\n                  fontWeight: \"bold\",\r\n                  width: \"100px\",\r\n                },\r\n              }}\r\n              onKeyDown={(e: any) => {\r\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                  e.preventDefault();\r\n                  wait(100).then(() => {\r\n                    departmentRef.current?.focus();\r\n                  });\r\n                }\r\n              }}\r\n              onBlur={(e: any) => {\r\n                const dateFrom = new Date(\r\n                  `${yearRef.current.input.value}-01-01`\r\n                );\r\n                const count = parseInt(dateCountRef.current?.value as string);\r\n                if (count < 0) {\r\n                  return alert(\"Invalid Year Count!\");\r\n                }\r\n                const dateTo = lastDayOfYear(\r\n                  new Date(addYears(dateFrom, count))\r\n                );\r\n\r\n                setTitle(\r\n                  generateTitle({\r\n                    dateFrom,\r\n                    dateTo,\r\n                  })\r\n                );\r\n              }}\r\n              ref={yearRef}\r\n            />\r\n            <TextInput\r\n              label={{\r\n                title: \"\",\r\n                style: {\r\n                  display: \"none\",\r\n                },\r\n              }}\r\n              input={{\r\n                min: 1,\r\n                max: 100,\r\n                type: \"number\",\r\n                style: {\r\n                  width: \"40px\",\r\n                  height: \"22px !important\",\r\n                  textAlign: \"right\",\r\n                },\r\n                defaultValue: \"0\",\r\n                onKeyDown: (e) => {\r\n                  if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                    e.preventDefault();\r\n                  }\r\n                },\r\n                onBlur: (e) => {\r\n                  const dateFrom = new Date(\r\n                    `${yearRef.current.input.value}-01-01`\r\n                  );\r\n                  const count = parseInt(e.currentTarget.value);\r\n                  if (count < 0) {\r\n                    return alert(\"Invalid Year Count!\");\r\n                  }\r\n                  const dateTo = lastDayOfYear(\r\n                    new Date(addYears(dateFrom, count))\r\n                  );\r\n\r\n                  setTitle(\r\n                    generateTitle({\r\n                      dateFrom,\r\n                      dateTo,\r\n                    })\r\n                  );\r\n                },\r\n                onFocus: () => {\r\n                  dateCountRef.current?.select();\r\n                },\r\n              }}\r\n              inputRef={dateCountRef}\r\n            />\r\n          </div>\r\n        )}\r\n        {report === \"Custom\" && !hideReport && (\r\n          <>\r\n            <TextInput\r\n              label={{\r\n                title: \"Date From:\",\r\n                style: {\r\n                  fontSize: \"12px\",\r\n                  fontWeight: \"bold\",\r\n                  width: \"100px\",\r\n                },\r\n              }}\r\n              input={{\r\n                type: \"date\",\r\n                style: {\r\n                  flex: 1,\r\n                  height: \"22px !important\",\r\n                },\r\n                defaultValue: format(new Date(), \"yyyy-MM-dd\"),\r\n                onKeyDown: (e) => {\r\n                  if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                    e.preventDefault();\r\n                  }\r\n                },\r\n                onBlur: (e) => {\r\n                  const dateFrom = new Date(e.currentTarget.value);\r\n                  const dateTo = new Date(dateToRef.current?.value as any);\r\n\r\n                  setTitle(\r\n                    generateTitle({\r\n                      dateFrom,\r\n                      dateTo,\r\n                    })\r\n                  );\r\n                },\r\n              }}\r\n              inputRef={dateFromRef}\r\n            />\r\n            <TextInput\r\n              label={{\r\n                title: \"Date To:\",\r\n                style: {\r\n                  fontSize: \"12px\",\r\n                  fontWeight: \"bold\",\r\n                  width: \"100px\",\r\n                },\r\n              }}\r\n              input={{\r\n                type: \"date\",\r\n                style: {\r\n                  flex: 1,\r\n                  height: \"22px !important\",\r\n                },\r\n                defaultValue: format(new Date(), \"yyyy-MM-dd\"),\r\n                onKeyDown: (e) => {\r\n                  if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                    e.preventDefault();\r\n\r\n                    // searchCollectionCreditOpenModal(e.currentTarget.value);\r\n                  }\r\n                },\r\n                onBlur: (e) => {\r\n                  const dateFrom = new Date(dateFromRef.current?.value as any);\r\n                  const dateTo = new Date(e.currentTarget.value);\r\n\r\n                  setTitle(\r\n                    generateTitle({\r\n                      dateFrom,\r\n                      dateTo,\r\n                    })\r\n                  );\r\n                },\r\n              }}\r\n              inputRef={dateToRef}\r\n            />\r\n          </>\r\n        )}\r\n        <SelectInput\r\n          label={{\r\n            title: \"Department : \",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"100px\",\r\n            },\r\n          }}\r\n          selectRef={departmentRef}\r\n          select={{\r\n            style: { flex: 1, height: \"22px\" },\r\n            defaultValue: \"All\",\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n                claimTypeRef.current?.focus();\r\n              }\r\n            },\r\n          }}\r\n          datasource={[{ key: \"All\" }, { key: \"UCSMI\" }, { key: \"UMIS\" }]}\r\n          values={\"key\"}\r\n          display={\"key\"}\r\n        />\r\n        <SelectInput\r\n          label={{\r\n            title: \"Claim Type : \",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"100px\",\r\n            },\r\n          }}\r\n          selectRef={claimTypeRef}\r\n          select={{\r\n            style: { flex: 1, height: \"22px\" },\r\n            defaultValue: \"All\",\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n                statusRef.current?.focus();\r\n              }\r\n            },\r\n          }}\r\n          datasource={[\r\n            {\r\n              key: \"All\",\r\n            },\r\n            {\r\n              key: \"Own Damage\",\r\n            },\r\n            {\r\n              key: \"Theft/Carnap\",\r\n            },\r\n            {\r\n              key: \"Acts of Nature\",\r\n            },\r\n            {\r\n              key: \"Bodily Injury\",\r\n            },\r\n            {\r\n              key: \"Death Claim\",\r\n            },\r\n            {\r\n              key: \"Third Party Bodily Injury \",\r\n            },\r\n            {\r\n              key: \"Third Party Property Damage\",\r\n            },\r\n            {\r\n              key: \"Unnamed Passenger Personal Accident \",\r\n            },\r\n          ]}\r\n          values={\"key\"}\r\n          display={\"key\"}\r\n        />\r\n        <SelectInput\r\n          label={{\r\n            title: \"Status : \",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"100px\",\r\n            },\r\n          }}\r\n          selectRef={statusRef}\r\n          select={{\r\n            style: { flex: 1, height: \"22px\" },\r\n            defaultValue: \"All\",\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n                insuranceRef.current?.focus();\r\n              }\r\n            },\r\n          }}\r\n          datasource={[\r\n            { key: \"All\" },\r\n            { key: \"For Review\" },\r\n            { key: \"For Evaluation \" },\r\n            { key: \"For Loa\" },\r\n            { key: \"For Billing\" },\r\n            { key: \"For Check Prep\" },\r\n            { key: \"ON HOLD\" },\r\n            { key: \"With Lacking Docs\" },\r\n          ]}\r\n          values={\"key\"}\r\n          display={\"key\"}\r\n        />\r\n        <SelectInput\r\n          ref={_insuranceRef}\r\n          label={{\r\n            title: \"Insurance : \",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"100px\",\r\n            },\r\n          }}\r\n          selectRef={insuranceRef}\r\n          select={{\r\n            style: { flex: 1, height: \"22px\" },\r\n            defaultValue: \"All\",\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n                // refInvoice.current?.focus();\r\n              }\r\n            },\r\n          }}\r\n          datasource={[]}\r\n          values={\"account\"}\r\n          display={\"account\"}\r\n        />\r\n        <div style={{ height: \"25px\" }}></div>\r\n\r\n        <Button\r\n          onClick={generateReportPdf}\r\n          color=\"success\"\r\n          variant=\"contained\"\r\n          sx={{ height: \"22px\", fontSize: \"12px\", width: \"100%\" }}\r\n        >\r\n          Generate PDF Report\r\n        </Button>\r\n        <Button\r\n          onClick={generateReportExcel}\r\n          color=\"success\"\r\n          variant=\"contained\"\r\n          sx={{ height: \"22px\", fontSize: \"12px\", width: \"100%\" }}\r\n        >\r\n          Generate Excel Report\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst MyDatePicker = ({\r\n  input,\r\n  label,\r\n  inputRef,\r\n  icon,\r\n  iconPosition = \"end\", // Default position is 'end'\r\n  disableIcon = false,\r\n  containerStyle,\r\n  onIconClick = (e: any) => {},\r\n  offValidation = false,\r\n  onKeyDown,\r\n  onBlur,\r\n  ref,\r\n}: any) => {\r\n  const [selectedYear, setSelectedYear] = useState(new Date());\r\n\r\n  const id = useId();\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        position: \"relative\",\r\n        ...containerStyle,\r\n      }}\r\n    >\r\n      <label {...label} htmlFor={id}>\r\n        {label.title}\r\n      </label>\r\n      {icon && iconPosition === \"start\" && (\r\n        <div style={{ position: \"absolute\", left: \"8px\", zIndex: 1 }}>\r\n          {icon}\r\n        </div>\r\n      )}\r\n      <div\r\n        style={{\r\n          flex: 1,\r\n          width: \"100%\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        <DatePicker\r\n          className={`custom-date-picker`}\r\n          ref={ref}\r\n          selected={selectedYear}\r\n          onChange={(date: any) => setSelectedYear(date)}\r\n          showYearPicker\r\n          dateFormat=\"yyyy\"\r\n          onKeyDown={onKeyDown}\r\n          onBlur={onBlur}\r\n        />\r\n      </div>\r\n      {icon && iconPosition === \"end\" && (\r\n        <div\r\n          onClick={onIconClick}\r\n          style={{\r\n            position: \"absolute\",\r\n            right: \"2px\",\r\n            top: \"50%\",\r\n            transform: \"translateY(-50%)\",\r\n            zIndex: 1,\r\n            cursor: disableIcon ? \"none\" : \"pointer\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            background: \"white\",\r\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\r\n          }}\r\n        >\r\n          {icon}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","export function isValidDate(dateString:string) {\r\n    // Ensure the date is in the correct format: YYYY-MM-DD\r\n     const regex = /^\\d{4}-\\d{2}-\\d{2}$/;\r\n     if (!regex.test(dateString)) {\r\n         return false;\r\n     }\r\n \r\n     // Extract the year, month, and day\r\n     const [year, month, day] = dateString.split(\"-\");\r\n \r\n     // Ensure year is a valid four-digit number and within a reasonable range\r\n     const parsedYear = parseInt(year);\r\n     if (parsedYear < 1000 || parsedYear > 2040) {\r\n         return false;\r\n     }\r\n \r\n     const date = new Date(dateString);\r\n     // Ensure the created date matches the parts we input, adjusting for overflow\r\n     return date.getFullYear() === parsedYear &&\r\n            date.getMonth() + 1 === parseInt(month) &&\r\n            date.getDate() === parseInt(day);\r\n }","import {\n  HtmlHTMLAttributes,\n  InputHTMLAttributes,\n  useId,\n  ReactNode,\n  useState,\n  LegacyRef,\n  TextareaHTMLAttributes,\n  CSSProperties,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport \"../Style/design.css\";\nimport { isValidDate } from \"../Lib/validateDate\";\nimport { format } from \"date-fns\";\nimport { wait } from \"../Lib/wait\";\n\ninterface TextInputProps {\n  input: InputHTMLAttributes<HTMLInputElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  inputRef?: React.RefObject<HTMLInputElement | null>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: \"start\" | \"end\"; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined;\n  disableIcon?: boolean;\n  containerStyle?: CSSProperties;\n  offValidation?: boolean;\n}\n\ninterface TextAreaPrps {\n  textarea: TextareaHTMLAttributes<HTMLTextAreaElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  _inputRef: LegacyRef<HTMLTextAreaElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: \"start\" | \"end\"; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined;\n  disableIcon?: boolean;\n  containerStyle?: CSSProperties;\n}\n\ninterface TextFormatedInputProps extends TextInputProps {\n  onChange?: React.ChangeEventHandler<HTMLInputElement> | undefined;\n  onBlur?: React.ChangeEventHandler<HTMLInputElement> | undefined;\n}\nexport function TextFormatedInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = \"end\", // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => {},\n  onChange = (e) => {},\n  onBlur = (e) => {},\n  containerStyle,\n}: TextFormatedInputProps) {\n  // const [inputValue, setInputValue] = useState('');\n  const id = useId();\n\n  // Helper function to format numbers with commas\n  const formatNumber = (value: string) => {\n    if (!value) return value;\n\n    // Split the value into integer and decimal parts\n    const parts = value.split(\".\");\n\n    // Add commas to the integer part only\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n    // Join the integer and decimal parts if decimal exists\n    return parts.join(\".\");\n  };\n\n  // Helper function to remove commas\n  const unformatNumber = (value: string) => {\n    return value.replace(/,/g, \"\");\n  };\n\n  // Function to ensure two decimal places\n  const ensureTwoDecimals = (value: string) => {\n    // If the value has no decimal part, append '.00'\n    if (!value.includes(\".\")) {\n      if (value === \"\") {\n        return \"0.00\";\n      } else {\n        return value + \".00\";\n      }\n    }\n\n    // If the value has one decimal place, append '0'\n    const parts = value.split(\".\");\n    if (parts[1].length === 1) {\n      return value + \"0\";\n    }\n\n    // If it already has two decimal places, return as is\n    return value;\n  };\n\n  const handleChange = (e: any) => {\n    let value = e.target.value;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Allow only numbers, commas, and one decimal point\n    const regex = /^-?\\d+(,\\d{3})*(\\.\\d*)?$/;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Check if the value is valid\n    if (value === \"\" || regex.test(value)) {\n      // Set the formatted value back in the input field\n      //setInputValue(formatNumber(value));\n      e.target.value = formatNumber(value);\n    } else {\n      const numbers = value.match(/\\d+/g);\n      if (numbers) {\n        const newV = numbers.join(\"\");\n        e.target.value = formatNumber(newV);\n      } else {\n        e.target.value = \"0\";\n      }\n    }\n  };\n\n  const handleBlur = (e: any) => {\n    let value = unformatNumber(e.target.value);\n\n    // Ensure the value has two decimal places\n    value = ensureTwoDecimals(value);\n\n    // Set the value with commas and .00 (if needed)\n    // setInputValue(formatNumber(value));\n    e.target.value = formatNumber(value);\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        position: \"relative\",\n        ...containerStyle, // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === \"start\" && (\n        <div style={{ position: \"absolute\", left: \"8px\", zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        type=\"text\"\n        style={{\n          height: \"100%\",\n          textAlign: \"right\",\n          ...input.style,\n        }}\n        onChange={(e) => {\n          handleChange(e);\n          onChange(e);\n        }}\n        onBlur={(e) => {\n          handleBlur(e);\n          onBlur(e);\n        }} // Add .00 on blur\n        onFocus={(e) => {\n          e.currentTarget.select();\n          if (input && input.onFocus) input.onFocus(e);\n        }}\n      />\n      {icon && iconPosition === \"end\" && (\n        <div\n          onClick={onIconClick}\n          style={{\n            position: \"absolute\",\n            right: \"2px\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}\n        >\n          {icon}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport function TextInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = \"end\", // Default position is 'end'\n  disableIcon = false,\n  containerStyle,\n  onIconClick = (e) => {},\n  offValidation = false\n}: TextInputProps) {\n  const id = useId();\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        position: \"relative\",\n        ...containerStyle,\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === \"start\" && (\n        <div style={{ position: \"absolute\", left: \"8px\", zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        onBlur={(e) => {\n          if (input.type === \"month\" && !offValidation) {\n            if (!isValidDate(`${e.currentTarget.value}-01`)) {\n              alert(\n                `Invalid ${label.title\n                  ?.replace(/:/g, \"\")\n                  .trim()}!, Resetting date.`\n              );\n              e.currentTarget.value = format(new Date(), \"yyyy-MM\");\n              wait(100).then(() => {\n                inputRef?.current?.focus();\n              });\n              return;\n            }\n          }\n          if (input.type === \"date\" && !offValidation) {\n            if (!isValidDate(e.currentTarget.value)) {\n              alert(\n                `Invalid ${label.title\n                  ?.replace(/:/g, \"\")\n                  .trim()}!, Resetting date.`\n              );\n              e.currentTarget.value = format(new Date(), \"yyyy-MM-dd\");\n              wait(100).then(() => {\n                inputRef?.current?.focus();\n              });\n              return;\n            }\n          }\n          if (input && input.onBlur) input.onBlur(e);\n        }}\n        style={{\n          height: \"100%\",\n          ...input.style,\n        }}\n      />\n      {icon && iconPosition === \"end\" && (\n        <div\n          onClick={onIconClick}\n          style={{\n            position: \"absolute\",\n            right: \"2px\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}\n        >\n          {icon}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport function TextAreaInput({\n  textarea,\n  label,\n  _inputRef,\n  icon,\n  iconPosition = \"end\", // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => {},\n  containerStyle,\n}: TextAreaPrps) {\n  const id = useId();\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        position: \"relative\",\n        ...containerStyle, // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === \"start\" && (\n        <div style={{ position: \"absolute\", left: \"8px\", zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <textarea\n        ref={_inputRef}\n        id={id}\n        {...textarea}\n        style={{\n          height: \"100%\",\n          ...textarea.style,\n        }}\n      />\n      {icon && iconPosition === \"end\" && (\n        <div\n          onClick={onIconClick}\n          style={{\n            position: \"absolute\",\n            right: \"2px\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}\n        >\n          {icon}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport const SelectInput = forwardRef(\n  (\n    {\n      select,\n      label,\n      selectRef,\n      datasource = [],\n      values = \"\",\n      display = \"\",\n      containerStyle,\n    }: {\n      selectRef?: React.RefObject<HTMLSelectElement | null>;\n      labelRef?: React.RefObject<HTMLLabelElement>;\n      select: InputHTMLAttributes<HTMLSelectElement>;\n      label: HtmlHTMLAttributes<HTMLLabelElement>;\n      datasource: Array<any>;\n      values: string;\n      display: string;\n      containerStyle?: React.CSSProperties | undefined;\n    },\n    ref: any\n  ) => {\n    const [_datasource, _setDataSource] = useState(datasource);\n    const id = useId();\n\n    useImperativeHandle(ref, () => ({\n      setDataSource: (_dataSource: any) => {\n        _setDataSource(_dataSource);\n      },\n      getDataSource: () => {\n        return _datasource;\n      },\n    }));\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          ...containerStyle,\n        }}\n      >\n        <label {...label} htmlFor={id}>\n          {label.title}\n        </label>\n        <select\n          {...select}\n          ref={selectRef}\n          className={`select ${select.className}`}\n          style={{\n            height: \"18px\",\n            ...select.style,\n          }}\n        >\n          {_datasource.map((itm, idx) => {\n            return (\n              <option key={idx} value={itm[values]}>\n                {itm[display]}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n);\n\nexport function ButtonField({\n  buttonRetRef,\n  button,\n  tooltipText = \"\",\n  children,\n  disabled = false,\n}: {\n  buttonRetRef?: React.RefObject<HTMLButtonElement>;\n  button: HtmlHTMLAttributes<HTMLButtonElement>;\n  tooltipText: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n}) {\n  return (\n    <div className=\"tooltip\">\n      <button\n        disabled={disabled}\n        {...button}\n        ref={buttonRetRef}\n        style={{\n          ...button.style,\n          cursor: \"pointer\",\n          background: !disabled ? \"transparent\" : \"#f1f1f1\",\n        }}\n        className=\"tooltip-button\"\n      >\n        {children}\n      </button>\n      {!disabled && <span className=\"tooltip-text\">{tooltipText}</span>}\n    </div>\n  );\n}\n"],"names":["_ref","title","_jsxs","Helmet","children","_jsx","rel","type","href","buttons","label","id","ClaimsReport","buttonSelected","setButtonSelected","useState","_Fragment","PageHelmet","style","display","alignItems","justifyContent","flex","height","backgroundColor","border","width","flexDirection","rowGap","padding","boxShadow","columnGap","background","position","textAlign","fontSize","overflow","map","itm","idx","color","cursor","onClick","ClaimStatus","titleHeader","linkPdf","linkExcel","hideReport","user","myAxios","useContext","UserContext","setTitle","generateTitle","dateFrom","Date","dateTo","lastDayOfMonth","report","setReport","titleRef","useRef","reportRef","departmentRef","claimTypeRef","statusRef","_insuranceRef","insuranceRef","monthRef","yearRef","dateCountRef","dateFromRef","dateToRef","isPending","isLoadingAccount","mutate","mutateAccount","useMutation","mutationKey","mutationFn","async","post","variables","headers","Authorization","accessToken","onSuccess","res","variable","response","current","setDataSource","data","isLoadingReportPDF","mutateReportPDF","responseType","pdfBlob","Blob","pdfUrl","URL","createObjectURL","window","open","encodeURIComponent","isLoadingReportExcel","mutateReportExcel","link","document","createElement","download","click","mutateAccountRef","_ref2","format","useEffect","Loading","TextAreaInput","containerStyle","marginBottom","fontWeight","textarea","rows","value","onChange","e","currentTarget","_inputRef","SelectInput","selectRef","select","defaultValue","onKeyDown","code","preventDefault","datasource","key","values","TextInput","input","onBlur","inputRef","MyDatePicker","wait","then","_departmentRef$curren3","focus","_dateCountRef$current3","count","parseInt","alert","lastDayOfYear","addYears","ref","min","max","onFocus","_dateCountRef$current4","_dateToRef$current3","_dateFromRef$current3","_claimTypeRef$current3","_statusRef$current3","_insuranceRef$current3","Button","_titleRef$current","_departmentRef$curren","_claimTypeRef$current","_statusRef$current","_insuranceRef$current","_monthRef$current","_dateCountRef$current","_dateFromRef$current","_dateToRef$current","department","claimType","status","insurance","variant","sx","_titleRef$current2","_departmentRef$curren2","_claimTypeRef$current2","_statusRef$current2","_insuranceRef$current2","_monthRef$current2","_dateCountRef$current2","_dateFromRef$current2","_dateToRef$current2","_ref3","icon","iconPosition","disableIcon","onIconClick","offValidation","selectedYear","setSelectedYear","useId","htmlFor","left","zIndex","DatePicker","className","selected","date","showYearPicker","dateFormat","right","top","transform","pointerEvents","isValidDate","dateString","test","year","month","day","split","parsedYear","getFullYear","getMonth","getDate","TextFormatedInput","formatNumber","parts","replace","join","unformatNumber","target","numbers","match","newV","handleChange","includes","length","ensureTwoDecimals","handleBlur","_label$title","_label$title2","trim","_inputRef$current","_inputRef$current2","forwardRef","_ref4","_datasource","_setDataSource","useImperativeHandle","_dataSource","getDataSource"],"sourceRoot":""}